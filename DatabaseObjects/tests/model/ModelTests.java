package model;

import java.sql.SQLException;
import java.sql.Types;
import java.util.Random;

import model.Filter.FilterType;
import model.Filter.RelationType;

public class ModelTests
{
	public static final Filter FILTER_NAME;
	public static final Filter FILTER_ITEMS_BOUGHT;
	
	static
	{
		var temp = new Filter();
		
		temp.filterColumn(CustomerTable.NAME.cloneWithValue("pickles"), FilterType.EQUAL);
		FILTER_NAME = temp;
		
		temp = new Filter();
		
		temp.filterColumn(CustomerTable.ITEMS_BOUGHT.cloneWithValue(60), FilterType.GREATER_THAN_EQUAL);
		temp.filterColumn(RelationType.OR, CustomerTable.ITEMS_BOUGHT.cloneWithValue(30), FilterType.LESS_THAN_EQUAL);
		FILTER_ITEMS_BOUGHT = temp;
	}
	
	public static void main(String[] args) throws SQLException, ClassNotFoundException
	{
		var random = new Random();
		var customer = new CustomerTable();
		customer.getColumn(CustomerTable.ITEMS_BOUGHT).setValue(random.nextInt(101));
		
		Database.registerDriver("com.mysql.jdbc.Driver");
		Database db = new Database("jdbc:mysql://127.0.0.1:3306/gameserver", "root", "minecraft");
		
		System.out.println();
		System.out.println(customer.getCommitSQL());
		
		System.out.println();
		customer.getColumn(CustomerTable.NAME).setValue("pickles");
		System.out.println(customer.getCommitSQL());
		
		var name = customer.getColumn(CustomerTable.NAME).getValue();
		System.out.println(name);
		
//		customer.commit(db);
		
		System.out.printf("The autogenerated key was %s!\n", customer.getColumn("id").getValue());
		
		var all_customers = customer.query(db)
									.filter(FILTER_NAME)
									.filter(FILTER_ITEMS_BOUGHT);
		
		System.out.println(all_customers);
		
		for(var customer_ : all_customers.all())
		{
			System.out.printf("Id: %s Name: %s Items Bought: %s\n", customer_.getColumn("id").getValue(), customer_.getColumn("name").getValue(), customer_.getColumn("itemsbought").getValue());
		}
	}
	
	private static class CustomerTable extends Table
	{
		public static final Column<Integer> ID =
				new Column<Integer>(Integer.class, "id", Types.INTEGER, 0, true, false, true, null);
		
		public static final Column<String> NAME =
				new Column<String>(String.class, "name", Column.TEXT, 0, false, false, false, null);
		
		public static final Column<Integer> ITEMS_BOUGHT =
				new Column<Integer>(Integer.class, "itemsbought", Types.INTEGER, 0, false, false, false, null);
		
		public CustomerTable()
		{
			super("customer", ID.typeClone(), NAME.typeClone(), ITEMS_BOUGHT.typeClone());
		}
	}
}
